import { NextResponse } from 'next/server';
import prisma from '../../../lib/prisma';

// R√©cup√©rer tous les mod√®les
export async function GET() {
  try {
    console.log("üîÑ D√©but de la r√©cup√©ration des mod√®les...");

    // R√©cup√©ration des mod√®les avec leurs relations
    const models = await prisma.model.findMany({
      include: {
        fabric: true, // Inclut le tissu associ√©
        artisan: true, // Inclut l'artisan associ√©
        modelImages: true,  // Inclut les images associ√©es
        countries: true, //Inclut les pays associ√©s (si pertinent)
      
        product: {
          select: {
            image: true, // ‚úÖ R√©cup√®re l'image du produit associ√©
          },
        },
      },
    })

    console.log("‚úÖ Mod√®les r√©cup√©r√©s :", models);

    // V√©rification des chemins d'images
    models.forEach((model) => {
      console.log(`üîç Mod√®le ID: ${model.id}, Image: ${model.image}`);
      if (model.modelimage && model.modelimage.length > 0) {
        console.log(`üîç Images associ√©es pour le mod√®le ${model.id}:`, model.modelimage);
      }
    });

    return NextResponse.json(models, { status: 200 });
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©cup√©ration des mod√®les :", error);
    return NextResponse.json(
      { message: "Erreur lors de la r√©cup√©ration des mod√®les", error: error.message },
      { status: 500 }
    );
  }
}
