import { NextResponse } from "next/server";
import prisma from "../../../lib/prisma"; // Assurez-vous que prisma est correctement import√©

export async function GET() {
  try {
    console.log("üîÑ D√©but de la r√©cup√©ration des accessoires...");

    // R√©cup√©ration des accessoires avec leurs relations
    const accessories = await prisma.accessory.findMany({
      include: {
        fabric: true, // ‚úÖ Inclut le tissu associ√© si pertinent
        artisan: true, // ‚úÖ Inclut l'artisan associ√©
        accessoryImages: true,  // ‚úÖ Inclut les images associ√©es
        countries: true, // ‚úÖ Inclut les pays associ√©s si pertinent
      
        product: {
          select: {
            image: true, // ‚úÖ R√©cup√®re l'image du produit associ√©
          },
        },
      },
    });

    console.log("‚úÖ Accessoires r√©cup√©r√©s :", accessories);

    // V√©rification des chemins d'images
    accessories.forEach((accessory) => {
      console.log(`üîç Accessoire ID: ${accessory.id}, Image: ${accessory.product?.image || "Aucune image"}`);
      if (accessory.accessoryImages && accessory.accessoryImages.length > 0) {
        console.log(`üîç Images associ√©es pour l'accessoire ${accessory.id}:`, accessory.accessoryImages);
      }
    });

    return NextResponse.json(accessories, { status: 200 });
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©cup√©ration des accessoires :", error);
    return NextResponse.json(
      { message: "Erreur lors de la r√©cup√©ration des accessoires", error: error.message },
      { status: 500 }
    );
  }
}