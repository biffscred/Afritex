generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  emailVerified DateTime?
  orders        Order[]
}

model Order {
  id        Int      @id @default(autoincrement())
  userId    Int
  total     Float    @default(0)
  createdAt DateTime @default(now())
  status    String   @default("PENDING")

  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Order_UserId_fkey")
  orderItems OrderItem[]

  @@index([userId])
}

model OrderItem {
  id          Int   @id @default(autoincrement())
  orderId     Int
  productId   Int?
  fabricId    Int?
  accessoryId Int?
  modelId     Int?
  quantity    Int
  price       Float

  order     Order      @relation(fields: [orderId], references: [id], onDelete: Cascade, map: "OrderItem_OrderId_fkey")
  product   Product?   @relation(fields: [productId], references: [id], onDelete: Cascade, map: "OrderItem_ProductId_fkey")
  fabric    Fabric?    @relation(fields: [fabricId], references: [id], onDelete: Cascade, map: "OrderItem_FabricId_fkey")
  accessory Accessory? @relation("OrderItemAccessory", fields: [accessoryId], references: [id], onDelete: Cascade)
  model     Model?     @relation("OrderItemModel", fields: [modelId], references: [id], onDelete: Cascade)

  @@index([orderId])
  @@index([productId])
  @@index([fabricId])
  @@index([accessoryId])
  @@index([modelId])
}
model Product {
  id          Int             @id @default(autoincrement())
  name        String
  description String          @db.Text
  price       Float
  category    ProductCategory
  image       String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  available   Boolean         @default(true)
  artisanId   Int?
  color       String?
  material    String?
  mockupImage String?
 productImages  ProductImage[]  
   

  fabric      Fabric?     @relation("FabricToProduct")
  accessories Accessory[] @relation("ProductToAccessory")
  models      Model[]
  orderItems  OrderItem[]

  artisan   Artisan?  @relation(fields: [artisanId], references: [id])
  countries Country[] @relation("ProductCountries")

  @@index([artisanId])
}

model Fabric {
  id        Int     @id @default(autoincrement())
  material  String?
  pattern   String?
  productId Int     @unique

  name      String   @unique
  image     String?
  price     Float
  origin    String?
  createdAt DateTime @default(now())
  updatedAt DateTime

  product      Product       @relation("FabricToProduct", fields: [productId], references: [id], onDelete: Cascade)
  orderItems   OrderItem[]
  accessories  Accessory[]
  models       Model[]
  fabricImages FabricImage[]
  countries    Country[]     @relation("FabricCountries")
}

model Accessory {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  price       Float
  fabricId    Int?
  productId   Int

  product Product @relation("ProductToAccessory", fields: [productId], references: [id], onDelete: Cascade)
  fabric  Fabric? @relation(fields: [fabricId], references: [id], onDelete: Cascade)

  image           String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  color           String?
  artisanId       Int?
  artisan         Artisan?         @relation(fields: [artisanId], references: [id], onDelete: Cascade)
  accessoryImages AccessoryImage[]
  countries       Country[]        @relation("AccessoryCountries")
  orderItems      OrderItem[]      @relation("OrderItemAccessory")

  @@index([artisanId])
  @@index([fabricId])
}

model Model {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  productId   Int
  fabricId    Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  color       String?
  artisanId   Int?
  image       String?

  product     Product      @relation(fields: [productId], references: [id], onDelete: Cascade)
  fabric      Fabric?      @relation(fields: [fabricId], references: [id], onDelete: Cascade)
  artisan     Artisan?     @relation(fields: [artisanId], references: [id], onDelete: Cascade)
  modelImages ModelImage[]
  countries   Country[]    @relation("ModelCountries")
  orderItems  OrderItem[]  @relation("OrderItemModel")

  @@index([artisanId])
  @@index([fabricId])
}

model Artisan {
  id          Int         @id @default(autoincrement())
  name        String
  countryId   Int
  accessories Accessory[]
  country     Country     @relation(fields: [countryId], references: [id], onDelete: Cascade)
  models      Model[]
  products    Product[]

  @@index([countryId])
}

model Country {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  artisans    Artisan[]
  accessories Accessory[] @relation("AccessoryCountries")
  fabrics     Fabric[]    @relation("FabricCountries")
  models      Model[]     @relation("ModelCountries")
  products    Product[]   @relation("ProductCountries")
}

model AccessoryImage {
  id          Int       @id @default(autoincrement())
  url         String
  altText     String?
  accessoryId Int
  accessory   Accessory @relation(fields: [accessoryId], references: [id], onDelete: Cascade)

  @@index([accessoryId])
}

model FabricImage {
  id       Int     @id @default(autoincrement())
  url      String
  altText  String?
  fabricId Int
  fabric   Fabric  @relation(fields: [fabricId], references: [id], onDelete: Cascade)

  @@index([fabricId])
}

model ModelImage {
  id      Int     @id @default(autoincrement())
  url     String
  altText String?
  modelId Int
  model   Model   @relation(fields: [modelId], references: [id], onDelete: Cascade)

  @@index([modelId])
}
model ProductImage {
  id         Int     @id @default(autoincrement())
  url        String
  altText    String?
  productId  Int
  product    Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}

enum UserRole {
  USER
  ADMIN
}

enum ProductCategory {
  FABRIC
  MODEL
  ACCESSORY
}
